/*
 * Copyright (C) 2008-2009 Daniel Prevost <dprevost@users.sourceforge.net>
 *
 * This file may be distributed and/or modified under the terms of the
 * MIT License as described by the Open Source Initiative
 * (http://opensource.org/licenses/mit-license.php) and appearing in
 * the file COPYING included in the packaging of this software.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY, to the extent permitted by law; without even the
 * implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 */

// --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--

#include "CfamilyHandler.h"
#include "parser.h"

// --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--

using namespace std;

// --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--

CfamilyHandler::CfamilyHandler()
{
   barrier = "/* --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+-- */";
}

// --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--

void CfamilyHandler::addTop( std::string & xmlFilename,
                             char        * timeBuf,
                             xmlChar     * version )
{
   outStream << "/*" << endl;
   outStream << " * This file was generated by the program errorParser" << endl;
   outStream << " * using the input file " << xmlFilename << "." << endl;
   outStream << " * Date: " << timeBuf << "." << endl;
   outStream << " *" << endl;
   if ( version != NULL ) {
      outStream << " * The version of the XML error file is " << version << "." << endl;
      outStream << " *" << endl;
   }
}

// --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--

void CfamilyHandler::addCopyright( Copyright & copy )
{
   string & years   = copy.GetYears();
   string & authors = copy.GetAuthors();
   string tmp, prefix = " * ";
   xmlChar * paragraph;
   
   outStream << " * Copyright (C) " << years << " " << authors << endl;
   
   paragraph = copy.GetCopyParagraph();
   while ( paragraph != NULL ) {
         
         outStream << " *" << endl;

         stripText( paragraph, tmp );
         prettify( outStream, tmp, prefix, ERRP_LINE_LENGTH );
         
      paragraph = copy.GetCopyParagraph();
   }

   outStream << " *" << endl;
}

// --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--

void CfamilyHandler::addEndTop()
{
   outStream << " */" << endl << endl;
   outStream << barrier << endl << endl;
}

// --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--

